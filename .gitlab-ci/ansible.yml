---
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  ANSIBLE_COLLECTIONS_PATHS: "${CI_PROJECT_DIR}/.cache/ansible-collections"
  ANSIBLE_FORCE_COLOR: '1'

.ansible-lint:
  image: python:buster
  script: |
    test -f requirements.txt && pip install -r requirements.txt
    ansible-lint "${ANSIBLE_PLAYBOOK}"
  interruptible: true
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .cache
    policy: push
  tags:
    - docker
  variables:
    ANSIBLE_PLAYBOOK: ""

.ansible-playbook:
  image: python:buster
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "${SSH_PRIVATE_KEY}")
    - mkdir -p ~/.ssh
    - echo "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
  script: |
    if [ -z "${ANSIBLE_INVENTORY}" ]; then
      echo "No Ansible inventory is available via `ANSIBLE_INVENTORY`";
      exit 1;
    fi;
    if [ -z "${ANSIBLE_PLAYBOOK}" ]; then
      echo "No Ansible playbook is available via `ANSIBLE_PLAYBOOK`";
      exit 1;
    fi;
    test -f requirements.txt && pip install -r requirements.txt
    test -f requirements.yml && ansible-galaxy install -r requirements.yml
    ansible-playbook -i "${ANSIBLE_INVENTORY}" "${ANSIBLE_PLAYBOOK}"
  after_script:
    - rm -rf ~/.ssh
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .cache
    policy: pull
  tags:
    - docker
  variables:
    ANSIBLE_REMOTE_USER: "${SSH_USER}"
